import { useEffect, useState } from 'react'
import { Chart } from '@antv/g2';
import { ReactComponent as NpmIcon } from '../../assets/npm.svg'
import { ReactComponent as GithubIcon } from '../../assets/github.svg'

import './index.scss'

function Home() {
  const [rankedPackages, setRankedPackages] = useState([])

  useEffect(() => {
    onGetRankedPackages()
  }, [])

  useEffect(() => {
    if (rankedPackages.length) {
      console.log(1111)
      onRenderChart(rankedPackages)
    }
  }, [rankedPackages])

  const onGetRankedPackages = async () => {
    const response = await fetch('http://127.0.0.1:8080/')
    let data = await response.clone().json()
    setRankedPackages(data)
  }

  function* getSortFrame (arr: any) {
    let weekLength = arr[0].download.length
    for (let i = 0; i < weekLength; i ++) {
      let tmpArr = arr.map((item: any) => {
        return {
          name: item.name,
          downloads: item.download[i].downloads,
          date: item.download[i].label,
        }
      }).sort((a: any, b: any) => b.downloads - a.downloads)
      yield tmpArr
    }
  }

  const onRenderChart = (data: any) => {
    const chart = new Chart({
      container: 'container',
      autoFit: true,
    })

    const keyframe = chart.timingKeyframe()

    for (const frame of getSortFrame(data)) {
      keyframe
        // 绘制一个条形图
        .interval()
        .attr('paddingLeft', 100)
        .attr('legend', false)
        .coordinate({ transform: [{type:'transpose'}]})
        // 对数据稍作加工，为其添加上索引(index)字段，其中'...' 是一种解构语法
        .data(frame.map((datum: any, index: any) => ({ index, ...datum })))
        .annotation()
        .text({
          position: [frame.name, frame.downloads],
          content: frame.downloads,
          style: {
            textAlign: 'center',
          },
          offsetY: -30,
        })
        // 将索引字段编码到 x 轴的维度
        .encode('x', 'name')
        // 将表示值的字段编码到 y 轴的维度
        .encode('y', 'downloads')
        // 为了实现每次排序过程中的交换效果
        .encode('key', 'name')
        // 将表示当前正在交换元素的 swap 标记字段编码到条形图的颜色上
        .encode('color', 'name')
        .scale('color', {
          relations: [
            [(d: any) => {
              return d === 'debug'
            }, '#000'],
            [(d: any) => {
              return d === 'ms'
            }, '#fff'],
          ],
        })
    }
    chart.render()
  }

  return (
    <div className='nrv'>
      <section className='nrv-header'>
        <a className='nrv-header-left' href='/'>
          <span className='nrv-header-npm'>
            <NpmIcon />
          </span>
        </a>
        <a className='nrv-header-right' href='https://github.com/XueMeijing/npmrank' target={'_blank'}>
          <span className='nrv-header-github'>
            <GithubIcon />
          </span>
        </a>
      </section>
      <section className='nrv-desc'>
        Recent npm package downloads ranking top 10.
        Last update at 2022-03-08
      </section>
      <section className='nrv-body'>
        <div id='container' style={{height: 600}}></div>
      </section>
      <section className='nrv-footer'>
        <div className='nrv-footer-about'></div>
      </section>
    </div>
  )
}

export default Home